[{"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\index.tsx":"1","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\state\\todolists-reducer.ts":"2","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\AddItemForm.tsx":"3","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\EditableSpan.tsx":"4","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\App.tsx":"5","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\state\\tasks-reducer.ts":"6","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\Task.tsx":"7"},{"size":641,"mtime":1611420546000,"results":"8","hashOfConfig":"9"},{"size":2569,"mtime":1611420546000,"results":"10","hashOfConfig":"9"},{"size":1474,"mtime":1594727720000,"results":"11","hashOfConfig":"9"},{"size":952,"mtime":1594154724000,"results":"12","hashOfConfig":"9"},{"size":4777,"mtime":1611420546000,"results":"13","hashOfConfig":"9"},{"size":3577,"mtime":1611420546000,"results":"14","hashOfConfig":"9"},{"size":1603,"mtime":1594154664000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17n19f5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\index.tsx",[],["35","36"],"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\state\\todolists-reducer.ts",["37"],"import {v1} from 'uuid';\r\nimport {FilterValuesType, TodolistType} from '../App';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistType> =  []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all'\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n",["38","39"],"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\AddItemForm.tsx",["40","41","42"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\EditableSpan.tsx",[],"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\App.tsx",["43","44","45","46","47","48","49","50","51","52","53","54","55"],"import React, {useCallback, useReducer, useState} from 'react'\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n    todolistsReducer\r\n} from './state/todolists-reducer';\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC, tasksReducer} from './state/tasks-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './state/store';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction App() {\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const action = addTaskAC(title, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeStatus = useCallback(function (id: string, isDone: boolean, todolistId: string) {\r\n        const action = changeTaskStatusAC(id, isDone, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const action = removeTodolistAC(id);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const action = changeTodolistTitleAC(id, title);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const action = addTodolistAC(title);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n\r\n                            return <Grid item key={tl.id}>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={allTodolistTasks}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\state\\tasks-reducer.ts",["56"],"D:\\react\\it-kamasutra\\class\\todolist-ts\\it-incubator-todolist-ts\\src\\Task.tsx",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":33,"column":45,"nodeType":"66","messageId":"67","endLine":33,"endColumn":47},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":2,"column":14,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"75","line":2,"column":22,"nodeType":"72","messageId":"73","endLine":2,"endColumn":33},{"ruleId":"70","severity":1,"message":"76","line":1,"column":29,"nodeType":"72","messageId":"73","endLine":1,"endColumn":39},{"ruleId":"70","severity":1,"message":"77","line":1,"column":41,"nodeType":"72","messageId":"73","endLine":1,"endColumn":49},{"ruleId":"70","severity":1,"message":"78","line":13,"column":5,"nodeType":"72","messageId":"73","endLine":13,"endColumn":21},{"ruleId":"70","severity":1,"message":"79","line":15,"column":73,"nodeType":"72","messageId":"73","endLine":15,"endColumn":85},{"ruleId":"70","severity":1,"message":"80","line":32,"column":9,"nodeType":"72","messageId":"73","endLine":32,"endColumn":20},{"ruleId":"70","severity":1,"message":"81","line":33,"column":9,"nodeType":"72","messageId":"73","endLine":33,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":42,"column":8,"nodeType":"84","endLine":42,"endColumn":10,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":47,"column":8,"nodeType":"84","endLine":47,"endColumn":10,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"83","line":52,"column":8,"nodeType":"84","endLine":52,"endColumn":10,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"83","line":57,"column":8,"nodeType":"84","endLine":57,"endColumn":10,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"83","line":62,"column":8,"nodeType":"84","endLine":62,"endColumn":10,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"83","line":67,"column":8,"nodeType":"84","endLine":67,"endColumn":10,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"83","line":72,"column":8,"nodeType":"84","endLine":72,"endColumn":10,"suggestions":"91"},{"ruleId":"64","severity":1,"message":"65","line":45,"column":53,"nodeType":"66","messageId":"67","endLine":45,"endColumn":55},{"ruleId":"82","severity":1,"message":"92","line":15,"column":97,"nodeType":"84","endLine":15,"endColumn":130,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"92","line":20,"column":8,"nodeType":"84","endLine":20,"endColumn":41,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"92","line":24,"column":8,"nodeType":"84","endLine":24,"endColumn":41,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["96"],["97"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","'useReducer' is defined but never used.","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],["99"],["100"],["101"],["102"],["103"],["104"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["105"],["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"108","fix":"111"},{"desc":"108","fix":"112"},{"desc":"108","fix":"113"},{"desc":"108","fix":"114"},{"desc":"108","fix":"115"},{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},{"desc":"116","fix":"119"},"Update the dependencies array to be: [dispatch]",{"range":"120","text":"121"},{"range":"122","text":"121"},{"range":"123","text":"121"},{"range":"124","text":"121"},{"range":"125","text":"121"},{"range":"126","text":"121"},{"range":"127","text":"121"},"Update the dependencies array to be: [props]",{"range":"128","text":"129"},{"range":"130","text":"129"},{"range":"131","text":"129"},[1456,1458],"[dispatch]",[1632,1634],[1841,1843],[2055,2057],[2259,2261],[2411,2413],[2595,2597],[693,726],"[props]",[955,988],[1145,1178]]